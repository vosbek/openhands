# Enterprise Development Environment Configuration
# Example configuration for corporate environments

# =============================================================================
# CONTAINER RUNTIME
# =============================================================================
CONTAINER_RUNTIME=podman

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================
HTTP_PORT=3000
JUPYTER_PORT=8888
CODE_SERVER_PORT=8080
DEBUG_PORT=5000
BIND_ADDRESS=0.0.0.0

# =============================================================================
# ENTERPRISE PROXY SETTINGS
# =============================================================================
HTTP_PROXY=http://proxy.company.com:8080
HTTPS_PROXY=http://proxy.company.com:8080
NO_PROXY=localhost,127.0.0.1,.company.com,.local,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16

# =============================================================================
# CORPORATE PACKAGE REGISTRIES
# =============================================================================
NPM_REGISTRY=https://artifactory.company.com/artifactory/api/npm/npm-virtual/
PIP_INDEX_URL=https://artifactory.company.com/artifactory/api/pypi/pypi-virtual/simple/
MAVEN_REPOSITORY_URL=https://artifactory.company.com/artifactory/maven-virtual/

# =============================================================================
# AWS CONFIGURATION (Enterprise Account)
# =============================================================================
AWS_PROFILE=corp-bedrock-dev
AWS_REGION=us-east-1
AWS_BEDROCK_REGION=us-east-1
AWS_BEDROCK_MODEL_ID=anthropic.claude-3-5-sonnet-20241022-v2:0

# =============================================================================
# CORPORATE GIT CONFIGURATION
# =============================================================================
GIT_USER_NAME="John Doe"
GIT_USER_EMAIL="john.doe@company.com"
GITHUB_ENTERPRISE_URL=https://github.company.com/api/v3

# =============================================================================
# ENTERPRISE SECURITY SETTINGS
# =============================================================================
# Corporate certificates are in certs/ directory
USE_WINDOWS_CERT_STORE=true
SSL_VERIFY=true

# =============================================================================
# DEVELOPMENT ENVIRONMENT SETTINGS
# =============================================================================
JAVA_OPTS="-Xmx4g -Xms1g -XX:+UseG1GC -Djavax.net.ssl.trustStore=/etc/ssl/certs/java/cacerts"
NODE_OPTIONS="--max-old-space-size=8192"
PYTHON_ENV=production

# =============================================================================
# PERFORMANCE TUNING FOR ENTERPRISE
# =============================================================================
MEMORY_LIMIT=8g
CPU_LIMIT=4.0

# =============================================================================
# CORPORATE COMPLIANCE
# =============================================================================
LOG_LEVEL=INFO
ENABLE_AUDIT_LOGGING=true
BACKUP_ENABLED=true

# =============================================================================
# NOTES FOR ENTERPRISE USERS
# =============================================================================
#
# REQUIRED SETUP:
# 1. Get corporate certificates from IT and place in certs/ directory
# 2. Configure AWS profile with enterprise account credentials
# 3. Get proxy settings from IT department
# 4. Get artifactory URLs from development team
# 5. Contact security team for any additional requirements
#
# CERTIFICATES NEEDED:
# - Corporate root CA certificate
# - Intermediate CA certificates  
# - GitHub Enterprise certificate
# - Artifactory SSL certificate
# - Proxy/firewall certificates
#
# AWS SETUP:
# 1. Use corporate AWS account with Bedrock access
# 2. Ensure IAM permissions for Bedrock operations
# 3. Configure profile with temporary credentials if required
# 4. Test access: aws bedrock list-foundation-models --region us-east-1
#
# NETWORK REQUIREMENTS:
# - Outbound HTTPS (443) to AWS Bedrock endpoints
# - Access to corporate package registries
# - GitHub Enterprise Server access
# - Proxy bypass for internal services