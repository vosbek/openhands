# Universal Development Environment Configuration - Windows PowerShell
# Copy this file to .universal-dev.env and customize

# =============================================================================
# CONTAINER RUNTIME
# =============================================================================
CONTAINER_RUNTIME=podman

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================
HTTP_PORT=3000
JUPYTER_PORT=8888
CODE_SERVER_PORT=8080
DEBUG_PORT=5000
BIND_ADDRESS=0.0.0.0

# =============================================================================
# WINDOWS-SPECIFIC PATHS
# =============================================================================
# Workspace directory (Windows path format)
WORKSPACE_DIR=C:\Users\%USERNAME%\Documents\OpenHands-Workspace

# Use Windows certificate store
USE_WINDOWS_CERT_STORE=true

# =============================================================================
# PROXY SETTINGS (Enterprise environments)
# =============================================================================
#HTTP_PROXY=http://proxy.company.com:8080
#HTTPS_PROXY=http://proxy.company.com:8080
#NO_PROXY=localhost,127.0.0.1,.company.com,.local

# =============================================================================
# PACKAGE REGISTRIES (Enterprise/Custom Repositories)
# =============================================================================
#NPM_REGISTRY=https://artifactory.company.com/artifactory/api/npm/npm-virtual/
#PIP_INDEX_URL=https://artifactory.company.com/artifactory/api/pypi/pypi-virtual/simple/
#MAVEN_REPOSITORY_URL=https://artifactory.company.com/artifactory/maven-virtual/

# =============================================================================
# AWS CONFIGURATION FOR BEDROCK INTEGRATION
# =============================================================================
# AWS Profile to use (recommended approach)
#AWS_PROFILE=default

# AWS Region
#AWS_REGION=us-east-1

# Bedrock-specific region (if different from AWS_REGION)
#AWS_BEDROCK_REGION=us-east-1

# Bedrock Model ID
#AWS_BEDROCK_MODEL_ID=anthropic.claude-3-5-sonnet-20241022-v2:0

# OPTION 1: Direct AWS Credentials (use only if you cannot use AWS profiles)
#AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
#AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
#AWS_SESSION_TOKEN=your_session_token_for_temporary_credentials

# =============================================================================
# GIT CONFIGURATION
# =============================================================================
#GIT_USER_NAME="Your Full Name"
#GIT_USER_EMAIL="your.email@company.com"
#GITHUB_TOKEN=ghp_your_personal_access_token
#GITHUB_ENTERPRISE_URL=https://github.company.com/api/v3

# =============================================================================
# DEVELOPMENT ENVIRONMENT SETTINGS
# =============================================================================
#JAVA_OPTS="-Xmx4g -Xms1g -XX:+UseG1GC"
#NODE_OPTIONS="--max-old-space-size=8192"
#PYTHON_ENV=development

# =============================================================================
# WINDOWS POWERSHELL SPECIFIC
# =============================================================================
# PowerShell execution policy (if needed)
#EXECUTION_POLICY=RemoteSigned

# Windows Defender exclusions (paths to exclude from real-time scanning)
#DEFENDER_EXCLUSIONS=C:\Users\%USERNAME%\.openhands-universal

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================
#MEMORY_LIMIT=8g
#CPU_LIMIT=4.0

# =============================================================================
# DEBUGGING
# =============================================================================
#DEBUG=false
#VERBOSE_LOGGING=false

# =============================================================================
# NOTES FOR WINDOWS USERS
# =============================================================================
# 
# WINDOWS PATHS:
# - Use Windows format: C:\Users\YourName\Documents
# - NOT Linux format: /home/user/documents
#
# PODMAN SETUP:
# - Install Podman Desktop: https://podman-desktop.io/
# - Or use Winget: winget install podman
# - Ensure Podman machine is running: podman machine start
#
# AWS CLI SETUP:
# - Install: winget install Amazon.AWSCLI
# - Configure: aws configure
# - Test: aws sts get-caller-identity
#
# ENTERPRISE USERS:
# - Contact IT for proxy settings
# - Export certificates from Windows Certificate Manager
# - Use corporate package registries if required