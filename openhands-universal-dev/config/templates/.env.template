# Universal Development Environment Configuration Template
# Copy this file to .universal-dev.env and customize for your environment
# ALL PATHS SHOULD BE ABSOLUTE - NO RELATIVE PATHS

# =============================================================================
# CONTAINER RUNTIME CONFIGURATION
# =============================================================================
CONTAINER_RUNTIME=podman

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================
# HTTP port for OpenHands web interface
HTTP_PORT=3000

# Jupyter Lab port
JUPYTER_PORT=8888

# VS Code Server port
CODE_SERVER_PORT=8080

# Debug/development port
DEBUG_PORT=5000

# Bind address (0.0.0.0 for external access, 127.0.0.1 for localhost only)
BIND_ADDRESS=0.0.0.0

# =============================================================================
# PROXY CONFIGURATION (Enterprise Environments)
# =============================================================================
# Uncomment and configure if your environment requires proxy access
#HTTP_PROXY=http://proxy.company.com:8080
#HTTPS_PROXY=http://proxy.company.com:8080
#NO_PROXY=localhost,127.0.0.1,.company.com,.local,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16

# =============================================================================
# PACKAGE REGISTRIES (Enterprise/Custom Repositories)
# =============================================================================
# NPM Registry (default: https://registry.npmjs.org/)
#NPM_REGISTRY=https://artifactory.company.com/artifactory/api/npm/npm-virtual/

# Python Package Index (default: https://pypi.org/simple/)
#PIP_INDEX_URL=https://artifactory.company.com/artifactory/api/pypi/pypi-virtual/simple/

# Maven Repository (default: https://repo1.maven.org/maven2/)
#MAVEN_REPOSITORY_URL=https://artifactory.company.com/artifactory/maven-virtual/

# =============================================================================
# AWS CONFIGURATION FOR BEDROCK INTEGRATION
# =============================================================================
# AWS Profile to use (recommended approach)
#AWS_PROFILE=bedrock-dev

# AWS Region
#AWS_REGION=us-east-1

# Bedrock-specific region (if different from AWS_REGION)
#AWS_BEDROCK_REGION=us-east-1

# Bedrock Model ID (Anthropic Claude 3.5 Sonnet recommended)
#AWS_BEDROCK_MODEL_ID=anthropic.claude-3-5-sonnet-20241022-v2:0

# OPTION 1: Direct AWS Credentials (NOT RECOMMENDED - use profiles instead)
# Only use these if you cannot use AWS profiles
#AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
#AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
#AWS_SESSION_TOKEN=your_session_token_for_temporary_credentials

# OPTION 2: AWS STS Assume Role (for cross-account access)
#AWS_ROLE_ARN=arn:aws:iam::123456789012:role/OpenHandsBedrock
#AWS_ROLE_SESSION_NAME=openhands-session

# =============================================================================
# GIT CONFIGURATION
# =============================================================================
# Global Git user configuration
#GIT_USER_NAME="Your Full Name"
#GIT_USER_EMAIL="your.email@company.com"

# GitHub Personal Access Token
#GITHUB_TOKEN=ghp_your_personal_access_token_here

# GitHub Enterprise URL (if using GitHub Enterprise Server)
#GITHUB_ENTERPRISE_URL=https://github.company.com/api/v3

# =============================================================================
# SSL/TLS CERTIFICATE CONFIGURATION
# =============================================================================
# Path to custom certificate directory (absolute path)
# Default: certs/ directory next to this script
#CUSTOM_CERT_DIR=/path/to/your/certificates

# Disable SSL verification (NOT RECOMMENDED for production)
#DISABLE_SSL_VERIFICATION=false

# Custom CA bundle path
#REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt

# =============================================================================
# DEVELOPMENT ENVIRONMENT SETTINGS
# =============================================================================
# Java JVM settings
#JAVA_OPTS="-Xmx4g -Xms1g -XX:+UseG1GC"

# Node.js memory settings
#NODE_OPTIONS="--max-old-space-size=8192"

# Python development mode
#PYTHON_ENV=development

# =============================================================================
# WORKSPACE CONFIGURATION
# =============================================================================
# Main workspace directory (will be mounted as /workspace in container)
# Default: ~/.openhands-universal/workspace
#WORKSPACE_DIR=/home/user/projects

# Cache directory for package managers
# Default: ~/.openhands-universal/cache
#CACHE_DIR=/home/user/.cache/openhands

# Configuration directory
# Default: ~/.openhands-universal/config
#CONFIG_DIR=/home/user/.config/openhands

# =============================================================================
# PLATFORM-SPECIFIC SETTINGS
# =============================================================================
# Windows WSL2 specific settings
#WSL_DISTRO_NAME=Ubuntu-24.04

# macOS specific settings
#MACOS_DOCKER_SOCKET=/var/run/docker.sock

# =============================================================================
# ENTERPRISE SECURITY SETTINGS
# =============================================================================
# Container user ID (should match your host user ID)
#CONTAINER_USER_ID=1000
#CONTAINER_GROUP_ID=1000

# Security context
#SECURITY_OPT="seccomp=unconfined"

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================
# Container resource limits
#MEMORY_LIMIT=8g
#CPU_LIMIT=4.0

# Disk cache settings
#CACHE_SIZE_LIMIT=10g

# =============================================================================
# DEBUGGING AND LOGGING
# =============================================================================
# Enable debug mode
#DEBUG=false

# Verbose logging
#VERBOSE_LOGGING=false

# Log level (ERROR, WARN, INFO, DEBUG)
#LOG_LEVEL=INFO

# =============================================================================
# ADDITIONAL ENVIRONMENT VARIABLES
# =============================================================================
# Any additional environment variables needed by your applications
#CUSTOM_API_KEY=your_api_key_here
#DATABASE_URL=postgresql://user:pass@localhost:5432/dbname
#REDIS_URL=redis://localhost:6379

# =============================================================================
# BACKUP AND PERSISTENCE
# =============================================================================
# Enable automatic workspace backup
#ENABLE_BACKUP=false

# Backup schedule (cron format)
#BACKUP_SCHEDULE="0 2 * * *"

# Backup retention (days)
#BACKUP_RETENTION_DAYS=30

# =============================================================================
# INTEGRATION SETTINGS
# =============================================================================
# VS Code Server settings
#VSCODE_PASSWORD=your_secure_password
#VSCODE_CERT_PATH=/path/to/cert.pem
#VSCODE_KEY_PATH=/path/to/key.pem

# Jupyter Lab settings
#JUPYTER_TOKEN=your_secure_token
#JUPYTER_PASSWORD=your_secure_password

# =============================================================================
# NOTES AND EXAMPLES
# =============================================================================
# 
# WINDOWS USERS:
# - Use WSL2 paths: /mnt/c/Users/YourName/Documents
# - NOT Windows paths: C:\Users\YourName\Documents
#
# MACOS USERS:
# - Ensure Podman machine is running: podman machine start
# - Use full paths: /Users/yourname/Documents
#
# ENTERPRISE USERS:
# - Contact your IT department for proxy settings
# - Get custom certificates from your security team
# - Use corporate package registries if required
#
# AWS BEDROCK SETUP:
# 1. Install AWS CLI: pip install awscli
# 2. Configure credentials: aws configure
# 3. Test access: aws bedrock list-foundation-models --region us-east-1
# 4. Set AWS_PROFILE to your configured profile name
#
# EXAMPLE CORPORATE CONFIGURATION:
# HTTP_PROXY=http://proxy.corp.com:8080
# HTTPS_PROXY=http://proxy.corp.com:8080
# NO_PROXY=localhost,127.0.0.1,.corp.com,.internal
# NPM_REGISTRY=https://artifactory.corp.com/npm/
# PIP_INDEX_URL=https://artifactory.corp.com/pypi/simple/
# AWS_PROFILE=corp-bedrock
# GIT_USER_EMAIL=yourname@corp.com
# CUSTOM_CERT_DIR=/etc/ssl/corporate-certs